module DatashiftJourney

  class FormsGenerator < Rails::Generators::Base

    #class_option :journey_class, type: :string, required: true, banner: 'The ActiveRecord model to use to manage journey'

    desc "This generator creates an initializer and concern to setup and manage the journey Model"

    def create_form_per_state

      klass = begin
        DatashiftJourney.journey_plan_class
      rescue => e
        raise "Could not load the DatashiftJourney.journey_plan_class"
      end

      base_form_definition=<<-EOF
class BaseForm < DatashiftJourney::BaseForm

  def initialize(model, journey_plan = nil)
    super(model, journey_plan)
  end

end

      EOF

      create_file "app/forms/base_form.rb" do
        base_form_definition
      end

      klass.state_machine.states.map(&:name).each do |state|
        create_file "app/forms/#{state}_form.rb" do
          state_form_definition( state.to_s )
        end
      end

    end


    private

    def  state_form_definition( state )
      state_form_definition=<<-EOF

class #{state.classify}Form < BaseForm

  def self.factory(journey)
    # Auto generated by DatashiftJourney - check this is really the Model this Form is managing
    model ||= #{state.classify}.new
    new(model, journey)
  end

  def params_key
    :#{state}
  end
end

      EOF

      state_form_definition

    end

  end
end
